@startuml team_module

skinparam ArrowColor #252525
skinparam ClassBackgroundColor #F0F1F5
skinparam ClassBorderColor #252525
skinparam ClassFontColor #252525


class TeamRepository {
  - prisma: PrismaService
  + findFirst()
  + findUnique()
  + findMany()
  + create()
  + delete()
  + update()
}


class TeamController {
  - teamService: TeamService
  + addTeam(dto: CreateTeamDto): Promise<TeamDto>
  + addUserTeam(userId:number): Promise<TeamExtendedMembersDto>
  + deleteUserTeam(userId:number): Promise<void>
  + moveUserTeam(userId:number, teamId:number): Promise<TeamExtendedMembersDto>
  + updateTeam(teamId: number, dto: UpdateTeamDto): Promise<TeamDto>
  + deleteTeamById(TeamId: number): Promise<void>
  + getTeams(): Promise<TeamDto[]>
  + getTeamMembers(teamId: number): Promise<TeamExtendedMembersDto[]>
}

class TeamService {
  - prismaExceptionHandler: PrismaExceptionHandler
  - teamRepository: TeamRepository
  + createTeam(dto: CreateTeamDto): Promise<TeamDto>
  + addUserTeam(userId:number): Promise<TeamExtendedMembersDto>
  + deleteUserTeam(userId:number): Promise<void>
  + moveUserTeam(userId:number, teamId:number): Promise<TeamExtendedMembersDto>
  + updateTeamById(id: number, dto: UpdateTeamDto): Promise<TeamDto>
  + deleteTeamById(id: number): Promise<void>
  + getTeams(): Promise<TeamDto[]>
  + getTeamMembers(teamId: number): Promise<TeamExtendedMembersDto[]>
}


class PrismaExceptionHandler {
  + handleError(error: any)
}

TeamController -> TeamService
TeamService "1" *-- "1" TeamRepository
TeamService "1" *-- "1" PrismaExceptionHandler
TeamRepository "1" *-- "1" PrismaService



@enduml
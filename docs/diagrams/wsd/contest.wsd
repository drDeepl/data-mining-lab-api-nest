@startuml contest_module

skinparam ArrowColor #252525
skinparam ClassBackgroundColor #F0F1F5
skinparam ClassBorderColor #252525
skinparam ClassFontColor #252525


class CreateContestDto {
  + name: string
  + startContest: Date
  + endContest: Date
}
class UpdateContestDto {
  + name: string
  + startContest: Date
  + endContest: Date
}

class ContestDto {
  + id: number
  + name: string
  + startContest: Date
  + endContest: Date
  + createdAt: Date
}

class CoverDto{
    + id: number
    + filename: string
}


class PrismaExceptionHandler {
  + handleError(error: any)
}


class ContestRepository {
  - prisma: PrismaService
  + findFirst()
  + findUnique()
  + findMany()
  + create()
  + delete()
  + update()
}

class ContestService {
  - prismaExceptionHandler: PrismaExceptionHandler
  - contestRepository: ContestRepository
  + createContest(dto: CreateContestDto): Promise<ContestDto>
  + updateContestById(id: number, dto: UpdateContestDto): Promise<ContestDto>
  + deleteContestById(id: number): Promise<void>
  + getContests(): Promise<ContestDto[]>
}


class ContestController {
  - contestService: ContestService
  + createContest(createContestDto: CreateContestDto): Promise<ContestDto>
  + updateContest(contestId: number, updateContestDto: UpdateContestDto): Promise<ContestDto>
  + deleteContestById(contestId: number): Promise<void>
  + getContest(): Promise<ContestDto[]>
}


ContestController -> ContestService
ContestController --> CreateContestDto
ContestController --> UpdateContestDto
ContestController --> ContestDto
ContestController --> CoverDto
CreateContestDto <--> ContestController
ContestService "1" *-- "1" ContestRepository
ContestService "1" *-- "1" PrismaExceptionHandler
ContestService "1" o-- "1" CreateContestDto
ContestService "1" o-- "1" UpdateContestDto
ContestService --> ContestDto
ContestService --> CreateContestDto
ContestService --> UpdateContestDto
ContestService --> ContestDto
ContestService --> CoverDto
ContestRepository "1" *-- "1" PrismaService



@enduml